/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAIN_2VIEWBASE_HPP
#define MAIN_2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_2_screen/Main_2Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Main_2ViewBase : public touchgfx::View<Main_2Presenter>
{
public:
    Main_2ViewBase();
    virtual ~Main_2ViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void updateCAN()
    {
        // Override and implement this function in Main_2
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image main_background;
    touchgfx::TextAreaWithOneWildcard speed;
    touchgfx::BoxProgress bar_LV;
    touchgfx::BoxProgress bar_HV;
    touchgfx::TextArea txt_MAX;
    touchgfx::TextArea txt_MIN;
    touchgfx::TextArea txt_kW;
    touchgfx::TextArea txt_ERRORS;
    touchgfx::TextAreaWithOneWildcard max_Speed;
    touchgfx::TextAreaWithOneWildcard min_Speed;
    touchgfx::TextAreaWithOneWildcard draw_val;
    touchgfx::BoxProgress bar_accel;
    touchgfx::BoxProgress bar_brake;
    touchgfx::Image error_Cooling;
    touchgfx::Image errorOverlay_Cooling;
    touchgfx::Image error_WheelSpeed;
    touchgfx::Image error_VCU;
    touchgfx::Image error_Inverter;
    touchgfx::Image errorOverlay_WheelSpeed;
    touchgfx::Image errorOverlay_VCU;
    touchgfx::Image errorOverlay_Inverter;
    touchgfx::TextAreaWithOneWildcard laptime_min;
    touchgfx::TextArea laptime_colon;
    touchgfx::TextAreaWithOneWildcard laptime_seconds;
    touchgfx::TextArea laptime_period;
    touchgfx::TextAreaWithOneWildcard laptime_hundreths;
    touchgfx::TextAreaWithOneWildcard laptime_mili;
    touchgfx::TextArea HV_text;
    touchgfx::TextArea LV_text;
    touchgfx::TextAreaWithOneWildcard textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar speedBuffer[SPEED_SIZE];
    static const uint16_t MAX_SPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar max_SpeedBuffer[MAX_SPEED_SIZE];
    static const uint16_t MIN_SPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar min_SpeedBuffer[MIN_SPEED_SIZE];
    static const uint16_t DRAW_VAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar draw_valBuffer[DRAW_VAL_SIZE];
    static const uint16_t LAPTIME_MIN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar laptime_minBuffer[LAPTIME_MIN_SIZE];
    static const uint16_t LAPTIME_SECONDS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar laptime_secondsBuffer[LAPTIME_SECONDS_SIZE];
    static const uint16_t LAPTIME_HUNDRETHS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar laptime_hundrethsBuffer[LAPTIME_HUNDRETHS_SIZE];

private:

};

#endif // MAIN_2VIEWBASE_HPP
